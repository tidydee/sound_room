<script src="http://connect.soundcloud.com/sdk.js"></script>
<script>
	window.playlist = []
	SC.initialize({
		client_id: '173c1924dc4e55b0db3b89a45bb71561'
	});

		function getUserFavoriteTracks() {

			var soundcloud_id = <%= current_user.soundcloud_user_id if current_user %>
			//-------------------- Local Storage Begin ----------------------\\
			var soundcloud_name = '<%= current_user.soundcloud_username if current_user %>';
			localStorage.setItem('currentUserName', soundcloud_name);
			var localUserName = localStorage.getItem('currentUserName');
			//-------------------- Local Storage End ----------------------\\
			
			SC.get('/users/'+soundcloud_id+'/favorites', function(favorites) {
	
				var data = []
				for (var i=0; i<favorites.length; i++) {
					var trackId = favorites[i].id;    
					data.push(trackId); 
				}
				console.log("ArrayData:"+data);

				$.ajax({
					dataType: "json",
					url: window.location.pathname, 
					type: "GET", 
					success: function (data) {
						console.log("DatabaseData:");
						for (var i=0; i<data.length; i++) {
							var reccordId = data[i].id;
							console.log('Reccord Id',reccordId);
							console.log("data id:", data[i].soundcloud_track_id);
							window.playlist.push(data[i].soundcloud_track_id);
						}
						console.log('scArrayData:', window.playlist);
						
						for (var i=0; i<favorites.length; i++) {
							var trackTitle = favorites[i].title.replace("'",'"');
							var trackId = favorites[i].id;
							var trackStreamUrl = favorites[i].stream_url;
							var trackOrder = i;
							var duration = favorites[i].duration;
							var trackImage = favorites[i].artwork_url;
							var row1 = "<td class='track'>"+trackTitle+"</td>";
							
							console.log("soundcloud id: ", trackId, $.inArray(trackId, window.playlist) );

							if($.inArray(trackId, window.playlist) !== -1) // check here if song existed
							{
								var removeButton = "<td><a href='' class='button button-update button-remove tiny' id='"+i+"' data-track-image='"+trackImage+"' data-duration='"+duration+"' data-title='"+trackTitle+"' data-track-id='"+trackId+"' data-track-order='"+i+"' data-id='"+trackId+"'><span class='button-name'>Remove</span></a></td>"

								$('#favorite_tracks').append("<tr class='track-row'>"+ row1 + removeButton +"</tr>");
							}
							else {
								var addButton = "<td><a href='' class='button button-update button-add tiny' id='"+i+"' data-track-image='"+trackImage+"' data-duration='"+duration+"' data-title='"+trackTitle+"' data-track-id='"+trackId+"' data-track-order='"+i+"'><span class='button-name'>Add</span></a></td>"

								$('#favorite_tracks').append("<tr class='track-row'>"+ row1 + addButton +"</tr>");
							}
						}

						$('.button-update').on('click', function(e){
							e.preventDefault();

							var $this = $(this),
									data = {
										soundcloud_track_id: $this.data('track-id'),
										title: $this.data('title'),
										duration: $this.data('duration'),
										room_id: $('[data-room-id]').data('room-id')
									};
							var image_url = $this.data('track-image');
							// Set at TOp of Page with Local Storage
							var userName = localUserName;
							var numberOfTracks = $('.room-tracks').children().length;
							// console.log('NUMBER OF TRACKS: ',numberOfTracks);
							var min = (((data.duration)/1000)/60) << 0;
							var sec = parseFloat(((data.duration)/1000) % 60).toFixed(0);
					
							if ($(this).hasClass('button-add')) {
								saveToDb(data, image_url, min, sec, userName, this);
							} else {
								removeFromDb($this.data('track-id'), this);
								// $("p").filter(":contains('Hello')").remove()
							}
						});
					}
				});
				
				// Add Data to DB
				function saveToDb(data, image_url, min, sec, userName, button){
					console.log('Add Function Works!');
					var $this = $(this);
					$.ajax({
						url: "<%= songs_path %>",
						data: data,
						dataType:  'json',
						type: "POST",
						success: function(data) {
							 $('.room-tracks').append('<p class="tracks" data-sc-track-id='+data.soundcloud_track_id+' data-image-url='+image_url+'>'+data.title+' - '+(min+':'+sec)+' min - added by '+userName+'</p>');
								$(button).removeClass('button-add').addClass('button-remove');
								$(button).text('Remove');

								window.playlist.push(data.soundcloud_track_id);

							// TODO: need to store the returned db id in the dom for the delete button later  
							//$this.data("id", data.trackId);
						
							alert("shit got saved");
						},
						error: function (err) {
							console.log(err);
						}
					});
				}
				// Remove Data to DB
				function removeFromDb(scID, button){
					console.log('REMOVE FUNCTION WORKS');
					// need to dynamically get the song_id from the dom
					// var $this = $(this);
					// console.log($this);
					// var sc_track_id = $this.data('id');

					$.ajax({
						url: "<%= songs_path %>/" + scID,
						data: {"_method":"delete"},
						type: "POST",
						success: function(data) {
							$('p.tracks[data-sc-track-id='+scID+']').remove();
							alert("shit got removed!");
							$(button).removeClass('button-remove').addClass('button-add');
							$(button).text('Add');
							index = window.playlist.indexOf(scID)
							window.playlist.splice(index, 1);
						},
						error: function (err) {
							console.log(err);
						}
					});
				}

				$('.track').click(function(e) {
					console.log('this click?');
					playTrack($(this).data('track-id'));
				}); 
			});
		};
			
		getUserFavoriteTracks();
	</script>

	<script>

				$(function() {     
					console.log('hey');
					var pusher = new Pusher('55b13e9beb0afef1e1cf');
					var chatWidget = new PusherChatWidget(pusher, {
						appendTo: '#pusher_chat_widget'
					});
				});

</script>
<script>



$(document).ready(function() {
	$('.tracks').click(function(e) {
		console.log('this click?');
		var scTrackId = $(this).data('sc-track-id')
		playTrack(scTrackId);
	});
});

	</script>

<div class="row large-12" style="clear:both">
	<div class="large-9 column room-content">
		<h1> <%= @room.name %> </h1>

		<!-- Only a User who created a room, can Delete a Room -->
		<% if current_user %>
			<% if @room.user_id == session[:user_id] %>
				<%= @room.name %> <%= link_to "delete", room_path(@room), method: :delete, data: {confirm: "You sure?"} %>
			<% end %>
		<% end %>

		<%= form_for @room do |f| %>
			<div class="error-message">
				<% if @room.errors.any? %>
					<div class="error-message-header"> 
						<%= pluralize(@room.errors.count, "error") %> prevented this room from being created:
					</div>
					<ul>
						<% @room.errors.full_messages.each do |msg| %>
							<li class="error-message-body"><%= msg %></li>
						<% end %>
					</ul>  
				<% end %>
			</div>
		<% end %>  
	</div> 
		
		<div id="right-window" class="large-3 column">
				<%= render partial: "/rooms/chatbar" %>
				<div class="player-wrap">
					<div id="progressBarBackground">
							<div class="progressBar"></div>
					</div>
					<h3>Player goes here</h3>
					<p>
						<span id="play">Play</span>
						<span id="pause">Pause</span>
						<span id="skip">Skip</span>
					</p>
					<p>
						<span id="mute">Mute</span>
						<span id="med-volume">Med</span>
						<span id="high-volume">High</span>
					</p>      
				</div>

				<div class="playlist">
					<% if current_user %>
						<h4>Room's Playlist</h4>
						<p>Add a new song to the playlist</p>
						<a href="#" data-reveal-id="myModal">+ songs</a>
							<div id="myModal" class="reveal-modal" data-reveal>   
								<div id="add-to-playlist">
								<%= render partial: "/rooms/addtoplaylist" %>
								<% @songs.each do |song| %>
								<%= song.image_url %><br />
						<% end %>
					<% else %> 
						<div class="large-8 column">
							<div data-alert class="alert-box alert">
								<p>Please sign in to add to the playlist.</p>
								<a href="#" class="close">&times;</a>
							</div>
						</div>  
					<% end %>
							</div>
						</div> 
				</div>
			</div>
			
<div id="songs-on-page-tab"> Songs On Page </div>      
	<div id="hidden">
		<div class="row" data-room-id="<%= @room.id %>">
			<div class="large-4 column room-playlist">
				<div class="room-tracks"> 
					<h3>Tracks on this page</h3>
					<% @songs.each_with_index do |song, index| %>
						<p class="tracks" id="<%= index %>" data-image-url= "<%= song.image_url %>" data-sc-track-id="<%= song.soundcloud_track_id %>" data-track-order="<%= index %>"> <%= song.title %> - <%= Time.at(song.duration / 1000).strftime("%-M:%S") %> min | added by <%= song.user.soundcloud_username %> </p>
						
						<% end %>
				</div> <!--large9 column-->    
			</div>
		</div>  
	</div>
</div> <!--large9 column-->

<style>

	p.tracks.selected-song {
		color:red;
	}

	.progressBar {
		background-color: #FFF;
		height: 15px;
	}

	#progressBarBackground{
		background-color: #333333;
		height: 15px;
		margin-top: 10px;
		position: relative;
		width: 100%;
	}
 

	</style>

